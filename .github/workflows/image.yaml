name: build and publish

on:
  push:
    branches: master

jobs:
  prepare:
    runs-on: ubuntu-24.04
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Create Version
        id: version
        run: echo "version=$(date +'%y.%m.%d.')${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

  build:
    needs: prepare
    strategy:
      matrix:
        include:
          - platform: linux/amd64
            runner: ubuntu-24.04
          - platform: linux/arm64
            runner: ubuntu-24.04-arm
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: ${{ matrix.platform }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract platform for cache key
        id: platform
        run: echo "platform=$(echo ${{ matrix.platform }} | tr '/' '-')" >> $GITHUB_OUTPUT

      - name: Cache Docker layers
        uses: actions/cache@v4
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ steps.platform.outputs.platform }}-${{ hashFiles('**/package-lock.json', '**/Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ steps.platform.outputs.platform }}-

      - name: Build and push Docker image to cache
        run: |
          docker buildx build \
            --cache-from "type=local,src=/tmp/.buildx-cache" \
            --cache-from "type=registry,ref=lkarolewski/wg-manager:cache-${{ steps.platform.outputs.platform }}" \
            --cache-to "type=local,dest=/tmp/.buildx-cache-new,mode=max" \
            --cache-to "type=registry,ref=lkarolewski/wg-manager:cache-${{ steps.platform.outputs.platform }},mode=max" \
            --platform ${{ matrix.platform }} \
            --build-arg VERSION=${{ needs.prepare.outputs.version }} \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            --push \
            --tag lkarolewski/wg-manager:build-${{ steps.platform.outputs.platform }}-${{ needs.prepare.outputs.version }} \
            --file ./Dockerfile ./

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  merge:
    needs: [prepare, build]
    runs-on: ubuntu-24.04
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create and push multi-platform manifest
        run: |
          docker buildx imagetools create \
            --tag lkarolewski/wg-manager:latest \
            --tag lkarolewski/wg-manager:${{ needs.prepare.outputs.version }} \
            lkarolewski/wg-manager:build-linux-amd64-${{ needs.prepare.outputs.version }} \
            lkarolewski/wg-manager:build-linux-arm64-${{ needs.prepare.outputs.version }}

      - name: Inspect image
        run: |
          docker buildx imagetools inspect lkarolewski/wg-manager:latest
